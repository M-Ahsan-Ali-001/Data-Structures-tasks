# -*- coding: utf-8 -*-
"""DS&A LAB TASK(Parenthesis Balancing ).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gEZsECaqtID8p0jyE_-h9EJbmmVt0TgF
"""

from collections import deque

class stack:
    def __init__(self):
        self.holder=deque()
    
    def push(self,data):
        self.holder.append(data)
    def pop(self):
        return self.holder.pop()
    
    def is_balanced(self,exp):
        print("\n",exp,"\n")
        l=len(self.holder)
        if l != 0:
           for x in (0,l):
            self.pop()
        if exp[0]=="(" or exp[0]=="{" or exp[0]=="[":
            for x in exp:
                if x=="(":
                    self.push(x)
                    
                elif x =="{":
                    self.push(x)
                    
                elif x =="[":
                    self.push(x)
               
                elif x ==")":
                  TOP=self.top()
                  
                  if TOP=="(":
                    self.pop()
                  
                elif x =="}":
                  TOP=self.top()
                  if TOP =="{":
                    self.pop()
                   # self.pop()
                       
                elif x =="]":
                  TOP=self.top()
                  if TOP =="[":
                    self.pop()
                    #self.pop()
             
            return self.is_empty()        
        elif exp[0]==")" or exp[0]=="}" or exp[0]=="]":
            return "False"
                
    def is_empty(self):
        return len(self.holder)==0
    def top(self):
      return self.holder[-1]

obj=stack()

print(obj.is_balanced("({a+b})"))

print(obj.is_balanced("))((a+b}{"))

print(obj.is_balanced("((a+b))"))

print(obj.is_balanced("[a+b]*(x+2y) *{gg+kk}"))

print(obj.is_balanced("))"))

print(obj.is_balanced("((a+b}}"))

print(obj.is_balanced("((a+b]]"))



